#coding:utf-8

"""
Title: Aide Mémoire pour python
Date: 19/03/2018
Create by: Florent
"""

print("Types D'Objet Standards")
print("\tentier numérique (int)")
print("\tnombre flottant: nombre décimal (float)")
print("\tchaîne de caractères (str)")
print("\tbooléen: valeur vrai ou faux | true/false (bool)")
print("\tliste/tableau (list)")
print("\tliste qui contient des éléments non modifiable après leur créations (tuple)")
print("\tdictionnaire: c'est un ensemble de valeur auquel on peut accéder grâce à d'autre objet (dict)")
print(" ")
print("Fonctions Standards")
print("\tprint('' '') -> affiche a l'écran")
print("\tinput() -> lire les entrées clavier !!! ATTENTION input() STOCK LES ENTREES CLAVIER UNIQUEMENT EN CHAINE DE CARACTERE !!!\n\t-> ex: prénom = input('quel est votre prénom?')")
print("\ttype() -> retourne le type d'une donnée, variable, etc...")
print("\tint(), float(), str(), bool() -> caster, convertir une donnée, variable...")
print("\treturn -> retourne une valeur ou un résultat")
print(" ")
print("Déclaration de variables")
print("\tPour déclarer un entier numérique (int)\n\t-> nom_de_la_variable = l'entier_numérique (ex: age = 18)")
print(" ")
print("\tPour déclarer un nombre numérique décimal 'flottant' (float)\n\t-> nom_de_la_variable = nombre_floattant (ex: litre_d_eau = 1.5) !!!ATTENTION NE PAS UTILISER DE VIRGULE MAIS UN POINT POUR LE/LES FLOAT!!!")
print(" ")
print("\tPour déclarer une chaîne de caractères (str)\n\t-> nom_de_la_variable = ''chaîne_de_caractère'' (ex: prenom = ''jacky'') !!!ATTENTION UTILISER DES GUIELLEMETS AVEC LES CHAINES DE CARACTERE!!!")
print(" ")
print("\tPour déclarer une liste/tableau (list)\n\t-> nom_de_la_variable = [''element'', ''de'', ''la'', ''liste''] (ex: liste_de_course = [''patate'', ''tomate'', ''mangue''])\n\t-> pour afficher un élément de la liste/tableau »» nom_de_la_liste[numéroIndex] (ex: liste_de_course[1] -> retournera 'tomate' car l'index commence a partir de 0 et non pas 1)")
print(" ")
print("\tPour déclarer une liste tuple (tuple)\n\t-> nom_de_la_variable = (''element'', ''non'', ''modifiable'') (ex: paris = (48.856578, 2.351828) )")
print(" ")
print("\tPour déclarer un  dictionnaire (dict)\n\t-> nom_de_la_variable = {''clé'': ''valeur'', ''new_clé'': ''new_valeur''} (ex: dico_fr_en = {''un'': ''one'', ''deux'': ''two''})\n\t-> pour retrouver/afficher la valeur voulu dans le dictionnaire on utilise la clé (ex: dico_fr_en[''un''] ->  retournera 'one')")
print(" ")
print("\t\tATTENTION LORS DE LA DECLARATION DE LIST/TUPLE/DICT A L'ORTHOGRAPHE EN FONCTION DU TYPE D'OBJET (str, int, float...) \nLE TYPE 'str' DOIT ETRE DECLARER AVEC DES GUIELLEMETS DOUBLE | LE TYPE 'int' ET 'float' NE NECESSITE PAS DE GUIELLEMETS")
print(" ")
print("Opérateur logique")
print("\tif -> si\n\tif condition_à_vérifier opérateur_mathématique valeur: (ex: if age == 18:)")
print(" ")
print("\telse -> sinon\n\tsi la condition if n'est pas valider alors else (ex: else:)")
print(" ")
print("\telif -> sinon si\n\tsi la condition if n'est pas  valider alors sinon si (ex: elif un == one:)")
print("\tpass -> permet de quitter une condition")
print(" ")
print("Fonctions")
print("\tdef -> définie/initialise la fonction (ex: def nom_de_la_fonction():)\n\tpour utiliser la fonction une fois qu'elle est définie -> nom_de_la_fonction()")
print("\tLors de la DECLARATION/DEFINITION d'une fonction, on peut y attribuer des parametres; ex: def nom_de_la_fonction(nom_du_parametre):")
print("\tLors de l'utilisatiion d'une fonction, on peut lui attribuer un objet; ex: nom_de_la_fonction(nom_de_l_objet)")
print(" ")
print("Boucles")
print("\twhile -> tant que la condition est valider, exécute les opérations qui suivent (ex: while réponse_de_l_utilisateur != ''B'':)")
print("\tfor -> pour chaque items dans cette liste fais ceci (ex: for item in a_list:)")
print("Méthodes")
print("Chaine de caractères")
print("\texemple.slit() | (exemple est le nom de la variable) ->  créer une liste a partir d'une chaine de caractères")
print("\texemple.strip() -> supprime tout les espaces blanc d'une chaîne de caractères suituer au début ou a la fin")
print("\texemple.upper() -> met tout les mots d'une chaine de caractères en majuscule")
print("\texemple.lower() -> met tout les mots d'une chaine de caractères en minuscule")
print(" ")
print("Listes")
print("\texemple.index('valeur') -> renvoi l'index d'une valeur")
print("\texemple.append('élément') -> ajoute un élément/valeur a la fin de la liste")
print("\texemple.insert(5, 'élément') -> ajoute un élément/valeur à un certain endroit de la liste (5 = le numéro de l'index ou sera placer la valeur/élément)")
print("\texemple[5] = 'new_valeur' -> modifie un élément de la liste")
print("\texemple.pop() -> supprime le dernier élément de la liste")
print("\texemple.remove('élément') -> supprime l'élément voulu")
print(" ")
print("Dictionnaire")
print("\texemple.update({'one': 'Un', 'two': 'Deux'}) -> mettre à jour une ou plusieurs valeurs")
print("\texemple.pop('valeur_a_supprimer') -> supprime une valeur")
print(" ")